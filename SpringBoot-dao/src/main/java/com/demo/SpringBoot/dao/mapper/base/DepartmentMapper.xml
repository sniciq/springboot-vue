<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.SpringBoot.dao.mapper.base.DepartmentMapper">

	<insert id="insert" parameterType="com.demo.SpringBoot.dao.entity.DepartmentEty">
		insert into department(
			id,name,phone,address)
		values (
			#{id},#{name},#{phone},#{address}
		)
	</insert>

	<select id="selectById" parameterType="long" resultType="com.demo.SpringBoot.dao.entity.DepartmentEty">
		select * from department where id=#{value}
	</select>

	<delete id="deleteById" parameterType="long">
		DELETE FROM department WHERE id=#{value}
	</delete>

	<select id="selectByEntity" parameterType="com.demo.SpringBoot.dao.entity.DepartmentEty" resultType="com.demo.SpringBoot.dao.entity.DepartmentEty">
		SELECT * from department
		<where> 
			<if test="id != null "> AND id=#{id}</if>
			<if test="name != null  and name != ''"> AND name=#{name}</if>
			<if test="phone != null  and phone != ''"> AND phone=#{phone}</if>
			<if test="address != null  and address != ''"> AND address=#{address}</if>
		</where> 
	</select>

	<update id="updateById" parameterType="com.demo.SpringBoot.dao.entity.DepartmentEty">
		UPDATE department
		<set> 
			<if test="name != null">name=#{name},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="address != null">address=#{address},</if>
		</set> 
		WHERE id=#{id}
	</update>

	<select id="selectByLimit" resultType="com.demo.SpringBoot.dao.entity.DepartmentEty">
		SELECT * from department
		<where> 
			<if test="ety.id != null "> AND id=#{ety.id}</if>
			<if test="ety.name != null  and ety.name != ''"> AND name=#{ety.name}</if>
			<if test="ety.phone != null  and ety.phone != ''"> AND phone=#{ety.phone}</if>
			<if test="ety.address != null  and ety.address != ''"> AND address=#{ety.address}</if>
		</where> 
		<if test="limit == null"> order by id desc</if>
		<if test="limit != null">
			<if test="limit.sort == null"> order by id desc</if>
			<if test="limit.sort != null"> order by ${limit.sort} ${limit.dir}</if>
			<if test="limit.limit != null"> limit ${limit.start}, ${limit.limit}</if>
		</if>
	</select>

	<select id="selectLimitCount" resultType="long">
		SELECT count(1) from department
		<where> 
			<if test="ety.id != null "> AND id=#{ety.id}</if>
			<if test="ety.name != null  and ety.name != ''"> AND name=#{ety.name}</if>
			<if test="ety.phone != null  and ety.phone != ''"> AND phone=#{ety.phone}</if>
			<if test="ety.address != null  and ety.address != ''"> AND address=#{ety.address}</if>
		</where> 
	</select>
</mapper>